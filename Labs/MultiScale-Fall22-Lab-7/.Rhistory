newRow[j] <- "-"
j <- j + 1
m <- m + 1
} else if(patterns[[i]][k] == "-") {
if(m == 1) {
MSA <- cbind(rep("-", nrow(MSA)), MSA)
} else {
MSA <- cbind(MSA[, 1:(m-1)], rep("-", nrow(MSA)), MSA[, m:ncol(MSA)])
}
newRow[j] <- subjects[[i]][k]
m <- m + 1
j <- j + 1
k <- k + 1
}
}
while(k <= length(patterns[[i]])) {
MSA <- cbind(MSA, rep("-", nrow(MSA)))
newRow[j] <- subjects[[i]][k]
k <- k + 1
j <- j + 1
}
while(m <= ncol(MSA)) {
newRow[j] <- "-"
m <- m + 1
j <- j + 1
}
newRow <- newRow[1:(m - 1)]
MSA <- rbind(MSA, newRow)
}
rownames(MSA) <- c("    Center:", paste0("Sequence ", 1:(nrow(MSA)), ":")[-center])
colnames(MSA) <- 1:ncol(MSA)
return(MSA)
}
sequences <- c("PVWHTAE", "HEVGAWGHEE", "PMCWGHVE")
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
## Generate alignments
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-6, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
align1
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
source("pairAlign.R")
buildMSA <- function(patterns, subjects, center) {
MSA <- rbind(patterns[[1]], subjects[[1]])
for(i in 2:length(patterns)) {
j = 1 #index in new row
k = 1 #index in alignment of center sequence to sequence i
m = 1 #column index of MSA
maxLength = ncol(MSA) + length(patterns[[i]])
newRow = character(maxLength)
while(k <= length(patterns[[i]]) && m <= ncol(MSA)) {
if(patterns[[i]][k] == MSA[1, m]) {
newRow[j] <- subjects[[i]][k]
j <- j + 1
k <- k + 1
m <- m + 1
} else if(MSA[1, m] == "-") {
newRow[j] <- "-"
j <- j + 1
m <- m + 1
} else if(patterns[[i]][k] == "-") {
if(m == 1) {
MSA <- cbind(rep("-", nrow(MSA)), MSA)
} else {
MSA <- cbind(MSA[, 1:(m-1)], rep("-", nrow(MSA)), MSA[, m:ncol(MSA)])
}
newRow[j] <- subjects[[i]][k]
m <- m + 1
j <- j + 1
k <- k + 1
}
}
while(k <= length(patterns[[i]])) {
MSA <- cbind(MSA, rep("-", nrow(MSA)))
newRow[j] <- subjects[[i]][k]
k <- k + 1
j <- j + 1
}
while(m <= ncol(MSA)) {
newRow[j] <- "-"
m <- m + 1
j <- j + 1
}
newRow <- newRow[1:(m - 1)]
MSA <- rbind(MSA, newRow)
}
rownames(MSA) <- c("    Center:", paste0("Sequence ", 1:(nrow(MSA)), ":")[-center])
colnames(MSA) <- 1:ncol(MSA)
return(MSA)
}
sequences <- c("PVWHTAE", "HEVGAWGHEE", "PMCWGHVE")
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
## Generate alignments
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-6, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
globins <- unlist(seqinr::read.fasta("globins.fasta", seqtype = "AA", as.string = T))
source("pairAlign.R")
centerStar <- function(sequences) {
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(sequences)
centerStar <- function(sequences) {
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
source("pairAlign.R")
buildMSA <- function(patterns, subjects, center) {
MSA <- rbind(patterns[[1]], subjects[[1]])
for(i in 2:length(patterns)) {
j = 1 #index in new row
k = 1 #index in alignment of center sequence to sequence i
m = 1 #column index of MSA
maxLength = ncol(MSA) + length(patterns[[i]])
newRow = character(maxLength)
while(k <= length(patterns[[i]]) && m <= ncol(MSA)) {
if(patterns[[i]][k] == MSA[1, m]) {
newRow[j] <- subjects[[i]][k]
j <- j + 1
k <- k + 1
m <- m + 1
} else if(MSA[1, m] == "-") {
newRow[j] <- "-"
j <- j + 1
m <- m + 1
} else if(patterns[[i]][k] == "-") {
if(m == 1) {
MSA <- cbind(rep("-", nrow(MSA)), MSA)
} else {
MSA <- cbind(MSA[, 1:(m-1)], rep("-", nrow(MSA)), MSA[, m:ncol(MSA)])
}
newRow[j] <- subjects[[i]][k]
m <- m + 1
j <- j + 1
k <- k + 1
}
}
while(k <= length(patterns[[i]])) {
MSA <- cbind(MSA, rep("-", nrow(MSA)))
newRow[j] <- subjects[[i]][k]
k <- k + 1
j <- j + 1
}
while(m <= ncol(MSA)) {
newRow[j] <- "-"
m <- m + 1
j <- j + 1
}
newRow <- newRow[1:(m - 1)]
MSA <- rbind(MSA, newRow)
}
rownames(MSA) <- c("    Center:", paste0("Sequence ", 1:(nrow(MSA)), ":")[-center])
colnames(MSA) <- 1:ncol(MSA)
return(MSA)
}
sequences <- c("PVWHTAE", "HEVGAWGHEE", "PMCWGHVE")
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
## Generate alignments
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-6, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
globins <- unlist(seqinr::read.fasta("globins.fasta", seqtype = "AA", as.string = T))
source("pairAlign.R")
centerStar <- function(sequences) {
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(globins) {
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
n <- length(sequences)
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
n <- length(sequences)
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
n <- length(sequences)
n
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
n <- length(sequences)
print(n)
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
centerStar(globins)
centerStar <- function(sequences) {
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
print(centerStar(globins))
centerStar <- function(sequences) {
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
fileConn<-file("output.txt")
writeLines(centerStar(globins), fileConn)
close(fileConn)
centerStar <- function(sequences) {
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
fileConn<-file("output.csv")
writeLines(centerStar(globins), fileConn)
close(fileConn)
centerStar <- function(sequences) {
n <- length(sequences)
align1 <- matrix("", n, n)
align2 <- align1
for(i in 1:(n-1)) {
for(j in (i+1):n) {
alignment <- pairAlign(sequences[i], sequences[j], "BLOSUM62", gapOpening=-12, gapExtension=-3)
align1[j, i] <- alignment[[1]]
align2[i, j] <- alignment[[1]]
align2[j, i] <- alignment[[2]]
align1[i, j] <- alignment[[2]]
}
}
distances <- sapply(mapply(`!=`, strsplit(align1, ""), strsplit(align2, "")), sum)
distanceMatrix <- matrix(distances, n, n)
centerCol <- which.min(colSums(distanceMatrix))
patterns <- strsplit(c(head(align1[, centerCol], centerCol-1), tail(align1[, centerCol], -centerCol)), "")
subjects <- strsplit(c(head(align2[, centerCol], centerCol-1), tail(align2[, centerCol], -centerCol)), "")
buildMSA(patterns, subjects, centerCol)
}
write.csv(centerStar(globins), "output.csv")
