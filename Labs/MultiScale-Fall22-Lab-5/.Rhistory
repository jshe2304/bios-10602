if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
library(seqinr)
install.packages('seqinr', repos='http://cran.us.r-project.org')
library(seqinr)
install.packages('seqinr', repos='http://cran.us.r-project.org')
library(seqinr)
install.packages("seqinr", repos = "http://cran.us.r-project.org")
install.packages('seqinr', repos='http://cran.us.r-project.org')
library(seqinr)
install.packages('seqinr', repos='http://cran.us.r-project.org')
library(seqinr)
install.packages("seqinr", repos = "http://cran.us.r-project.org")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
BiocManager::install("Biostrings")
suppressMessages(library(Biostrings))
source("pairAlign_cpp.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
BiocManager::install("Biostrings")
suppressMessages(library(Biostrings))
source("pairAlign_cpp.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
BiocManager::install("Biostrings")
suppressMessages(library(Biostrings))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
BiocManager::install("Biostrings")
suppressMessages(library(Biostrings))
source("pairAlign_cpp.R")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install(version = "3.15")
BiocManager::install("Biostrings")
source("pairAlign_cpp.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")#require specific R version; 3.13 for R 4.1; 3.15 for R 4.2
x <- strsplit("GATCCA", "")[[1]]
y <- strsplit("GATTACA", "")[[1]]
x
strsplit("GATCCA", "")
alignmentMatrix<-function(seq1, seq2){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
return(amatrix)
}
alignmentMatrix(x,y)
library(seqinr)
Ebola_seq <- read.fasta("Ebola.fasta")[[1]]
lut <- matrix(1, 4, 4)
diag(lut) <- 3
dimnames(lut) <- list(c("A", "C", "G", "T"), c("A", "C", "G", "T"))
lut
lut <- matrix(1, 5, 5)
diag(lut) <- 4
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut
lut <- matrix(1, 5, 5)
diag(lut) <- 4
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut
lut <- matrix(1, 5, 5)
diag(lut) <- 4
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- c(-3) * 4
lut
lut <- matrix(1, 5, 5)
diag(lut) <- 4
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- -3
lut
lut <- matrix(1, 5, 5)
diag(lut) <- 4
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- -3
lut["-", ] <- -3
lut
lut["-",]
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
amatrix[,""] <- scoreMat[,"-"]
amatrix["",] <- scoreMat["-",]
return(amatrix)
}
alignmentMatrix(x, y, lut)
lut[, "-"]
lut[, "-"][[1]]
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
amatrix[,""] <- scoreMat[,"-"][[1]]
amatrix["",] <- scoreMat["-",][[1]]
return(amatrix)
}
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
amatrix[,""] <- -3
amatrix["",] <- -3
return(amatrix)
}
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
amatrix[,1] <- -3
amatrix[1,] <- -3
return(amatrix)
}
alignmentMatrix(x, y, lut)
seq(from:0, by:-3, length.out:5)
seq0, by:-3, length.out:5)
seq(from=0, by=-3, length.out=5)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
amatrix[,""] <- seq(from=0, by=scoreMat[, "-"][[1]], length.out=length(amatrix[,""]))
amatrix["",] <- seq(from=0, by=scoreMat[, "-"][[1]], length.out=length(amatrix["",]))
return(amatrix)
}
alignmentMatrix<-function(seq1,seq2, scoreMat){
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
amatrix[,""] <- seq(from=0, by=scoreMat[, "-"][[1]], length.out=length(seq1)+1)
amatrix["",] <- seq(from=0, by=scoreMat[, "-"][[1]], length.out=length(seq2)+1)
return(amatrix)
}
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
gapDec <- scoreMat["-", ][1]
amatrix[,""] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix["",] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
return(amatrix)
}
alignmentMatrix(x, y, lut)
seq(from=0, by=gapDec, length.out=length(seq2)+1)
lut["-", ][1]
lut["-", ][[1]]
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
gapDec <- scoreMat["-", ][[1]]
amatrix[,""] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix["",] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
return(amatrix)
}
seq(from=0, by=-3, length.out=length("GATTACA")+1)
seq(from=0, by=-3, length.out=5
)
length("Gattaca")
alignmentMatrix(x, y, lut)
length(x)
seq(from=0, by=-3, length.out=lenght(x)+1)
seq(from=0, by=-3, length.out=length(x)+1)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
gapDec <- scoreMat["-", ][[1]]
amatrix[,1] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix[1,] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
return(amatrix)
}
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
amatrix
gapDec <- scoreMat["-", ][[1]]
gapDec
seq(from=0, by=gapDec, length.out=length(seq1)+1)
seq(from=0, by=gapDec, length.out=length(seq2)+1)
return(amatrix)
}
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
print(amatrix)
gapDec <- scoreMat["-", ][[1]]
print(gapDec)
print(seq(from=0, by=gapDec, length.out=length(seq1)+1))
print(seq(from=0, by=gapDec, length.out=length(seq2)+1))
return(amatrix)
}
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
print(amatrix)
gapDec <- scoreMat["-", ][[1]]
print(gapDec)
amatrix[1, ] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix[, 1] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
return(amatrix)
}
alignmentMatrix(x, y, lut)
View(alignmentMatrix)
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
gapDec <- scoreMat["-", ][[1]]
amatrix[1, ] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix[, 1] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
return(amatrix)
}
m <- alignmentMatrix(x, y, lut)
m
m.row
m[1, ].names
m[1,]
rownames(m)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
gapDec <- scoreMat["-", ][[1]]
amatrix[1, ] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix[, 1] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
for(i in 2:nrow(amatrix)) {
for(j in 2:ncol(amatrix)) {
l = amatrix[i-1, j] + gapDec
t = amatrix[i, j+1] + gapDec
lt = amatrix[i-1, j+1] + scoreMat[rownames(amatrix)[i], colnames(amatrix)[j]]
amatrix[i, j] <- max(l, t, lt)
}
}
return(amatrix)
}
alignmentMatrix(x, y, lut)
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
gapDec <- scoreMat["-", ][[1]]
amatrix[1, ] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix[, 1] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
for(i in 2:nrow(amatrix)) {
for(j in 2:ncol(amatrix)) {
l = amatrix[i-1, j] + gapDec
t = amatrix[i, j-1] + gapDec
lt = amatrix[i-1, j-1] + scoreMat[rownames(amatrix)[i], colnames(amatrix)[j]]
amatrix[i, j] <- max(l, t, lt)
}
}
return(amatrix)
}
alignmentMatrix(x, y, lut)
lut <- matrix(1, 5, 5)
diag(lut) <- 4
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- -3
lut["-", ] <- -3
lut
x <- strsplit("GATATTACCA", "")[[1]]
y <- strsplit("GATTTACTCA", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(match=4, mismatch=1, gap=-3))
scoreMatrix <- function(match, mismatch, gap)
lut <- matrix(mismatch, 5, 5)
diag(lut) <- match
scoreMatrix <- function(match, mismatch, gap)
lut <- matrix(mismatch, 5, 5)
diag(lut) <- match
scoreMatrix <- function(match, mismatch, gap)
lut <- matrix(mismatch, 5, 5)
diag(lut) <- match
?match
scoreMatrix <- function(mat, mis, gap)
lut <- matrix(mis, 5, 5)
diag(lut) <- mat
?mat
scoreMatrix <- function(mat, mis, gap)
lut <- matrix(mis, 5, 5)
diag(lut) <- mat
scoreMatrix <- function(mat, mis, gap)
lut <- matrix(mis, 5, 5)
diag(lut) <- 2
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- gap
scoreMatrix <- function(mat, mis, gap) {
lut <- matrix(mis, 5, 5)
diag(lut) <- 2
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- gap
lut["-", ] <- gap
return(lut)
}
scoreMatrix <- function(mat, mis, gap) {
lut <- matrix(mis, 5, 5)
diag(lut) <- 2
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- gap
lut["-", ] <- gap
return(lut)
}
alignmentMatrix<-function(seq1,seq2, scoreMat){
amatrix<- matrix(0, ncol=length(seq1)+1, nrow=length(seq2)+1)
rownames(amatrix) <-c("", seq2)
colnames(amatrix) <-c("", seq1)
gapDec <- scoreMat["-", ][[1]]
amatrix[1, ] <- seq(from=0, by=gapDec, length.out=length(seq1)+1)
amatrix[, 1] <- seq(from=0, by=gapDec, length.out=length(seq2)+1)
for(i in 2:nrow(amatrix)) {
for(j in 2:ncol(amatrix)) {
l = amatrix[i-1, j] + gapDec
t = amatrix[i, j-1] + gapDec
lt = amatrix[i-1, j-1] + scoreMat[rownames(amatrix)[i], colnames(amatrix)[j]]
amatrix[i, j] <- max(l, t, lt)
}
}
return(amatrix)
}
x <- strsplit("GATATTACCA", "")[[1]]
y <- strsplit("GATTTACTCA", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(match=4, mismatch=1, gap=-3))
x <- strsplit("GATATTACCA", "")[[1]]
y <- strsplit("GATTTACTCA", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=4, mis=1, gap=-3))
x <- strsplit("GATATTACCA", "")[[1]]
y <- strsplit("GATTTACTCA", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=4, mis=1, gap=-3))[length(x)+1, length(y)+1]
x <- strsplit("CGTACT", "")[[1]]
y <- strsplit("GACTTAC", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=4, mis=1, gap=-3))#[length(x)+1, length(y)+1]
scoreMatrix(mat=4, mis=1, gap=-3))
scoreMatrix(mat=4, mis=1, gap=-3)
scoreMatrix <- function(mat, mis, gap) {
lut <- matrix(mis, 5, 5)
diag(lut) <- mat
dimnames(lut) <- list(c("A", "C", "G", "T", "-"), c("A", "C", "G", "T", "-"))
lut[, "-"] <- gap
lut["-", ] <- gap
return(lut)
}
x <- strsplit("CGTACT", "")[[1]]
y <- strsplit("GACTTAC", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=4, mis=1, gap=-3))#[length(x)+1, length(y)+1]
x <- strsplit("GATATTACCA", "")[[1]]
y <- strsplit("GATTTACTCA", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=4, mis=1, gap=-3))[length(x)+1, length(y)+1]
suppressMessages(library(Biostrings))
source("pairAlign_cpp.R")
suppressMessages(library(Biostrings))
pairAlign("LEVTKGGQRKDRR", "LEVGMTKGGQRKERR", substitutionMatrix="BLOSUM62", gapExtension = -2, type = "global")
?nucleotideSubstitutionMatrix
suppressMessages(library("Biostrings"))
suppressMessages(library("biostrings"))
suppressMessages(library("Biostrings"), force=TRUE)
suppressMessages(library("Biostrings"), force=TRUE)
View(pairAlign)
?biostirngs
?biostrings
?Biostrings
library(Biostrings)
library(biostrings)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings")
suppressMessages(library("Biostrings"))
source("pairAlign_cpp.R")
pairAlign("LEVTKGGQRKDRR", "LEVGMTKGGQRKERR", substitutionMatrix="BLOSUM62", gapExtension = -2, type = "global")
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, baseOnly = TRUE) #creates DNA substitution matrix
pairAlign("ATTACCAGA", "ATTCCTGA", substitutionMatrix = "sub", gapExtension = -2, type = "global")
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, baseOnly = TRUE) #creates DNA substitution matrix
pairAlign("ATTACCAGA", "ATTCCTGA", substitutionMatrix = sub, gapExtension = -2, type = "global")
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, gap = -3)
?nucleotideSubstitutionMatrix
?pairAlign()
?pairAlign
View(pairAlign)
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, baseOnly = TRUE) #creates DNA substitution matrix
pairAlign("GATTACACCTAGGTACT", "GATCCAACGTCCAA", substitutionMatrix = sub, gapExtension = -2, type = "global")
class(sub)
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, baseOnly = TRUE) #creates DNA substitution matrix
pairAlign("GATTACACCTAGGTACT", "GATCCAACGTCCAA", substitutionMatrix = "sub", gapExtension = -2, type = "global")
x <- strsplit("GATTACACCTAGGTACT", "")[[1]]
y <- strsplit("GATCCAACGTCCAA", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=2, mis=-1, gap=-2))[length(x)+1, length(y)+1]
x <- strsplit("GATTACACCTAGGTACT", "")[[1]]
y <- strsplit("GATCCAACGTCCAA", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=2, mis=-1, gap=-2))
sub <- nucleotideSubstitutionMatrix(match = 4, mismatch = -2, baseOnly = TRUE)
pairAlign("GATTACACCTAGGTACT", "GATCCAACGTCCAA", substitutionMatrix = "sub", gapExtension = -3, type = "global")
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, baseOnly = TRUE)
pairAlign("GATTACACCTAGGTACT", "GATCCAACGTCCAA", substitutionMatrix = "sub", gapExtension = -2, type = "global")
class(sub)
sub[[1]]
sub[1
]
sub[2]
sub[[2]]
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, baseOnly = TRUE)
pairAlign("MVWHDVD", "HDVGVWGHDD", substitutionMatrix = "BLOSUM62", gapOpening=0, gapExtension = 0, type = "global")
sub <- nucleotideSubstitutionMatrix(match = 2, mismatch = -1, baseOnly = TRUE)
pairAlign("MVWHDVD", "HDVGVWGHDD", substitutionMatrix = "BLOSUM62", gapOpening=0, gapExtension = 0, type = "global")
pairAlign("MVWHDVD", "HDVGVWGHDD", substitutionMatrix = "BLOSUM62", gapOpening=0, gapExtension = 0, type = "global")
pairAlign("MVWHDVD", "HDVGVWGHDD", substitutionMatrix = "BLOSUM62", gapOpening=0, gapExtension = 0, type = "global")
pairAlign("MVWHDVD", "HDVGVWGHDD", substitutionMatrix = "BLOSUM62", gapOpening=0, gapExtension = -3, type = "global")
pairAlign("MVWHDVD", "HDVGVWGHDD", substitutionMatrix = "BLOSUM62", gapOpening=-6, gapExtension = -1, type = "global")
Ebola_seq
Ebola_seq[[1]]
Ebola_seq[1]
count(Ebola_seq, 2)
count1 <- count(Ebola_seq, 1)
count2 <- count(Ebola_seq, 2)
count1
count2
count1['a']
length(Ebola_seq)
fc <- count1['c']/length(Ebola_seq)
ft <- count1['t']/length(Ebola_seq)
fct <- count2['ct']/(length(Ebola_seq)/2)
fct/(fc*ft)
fc
fc * ft
x <- strsplit("CGTACT", "")[[1]]
y <- strsplit("GACTTAC", "")[[1]]
alignmentMatrix(x, y, scoreMatrix(mat=4, mis=1, gap=-3))
